name: Publish package

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: read
  packages: write

jobs:
  build:
    strategy:
      matrix:
        registry:
          - url: https://registry.npmjs.org
            token_secret: NPM_TOKEN
          - url: https://npm.pkg.github.com
            token_secret: GH_TOKEN
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: pnpm
          registry-url: ${{ matrix.registry.url }}
          scope: '@aittorai'
        env:
          NODE_AUTH_TOKEN: ${{ secrets[matrix.registry.token_secret] }}

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets[matrix.registry.token_secret] }}

      - name: Check and bump version if necessary
        id: bump_version
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          
          EXISTS=$(npm view $PACKAGE_NAME@$PACKAGE_VERSION --registry ${{ matrix.registry.url }} 2>&1 || true)

          if [[ $EXISTS == *"version not found"* ]]; then
            echo "Version $PACKAGE_VERSION does not exist. Proceeding with publish."
            echo "version=$PACKAGE_VERSION" >> $GITHUB_ENV
          else
            echo "Version $PACKAGE_VERSION already exists. Bumping version."
            NEW_VERSION=$(npm version patch --no-git-tag-version)
            echo "version=$NEW_VERSION" >> $GITHUB_ENV
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets[matrix.registry.token_secret] }}

      - name: Publish
        run: pnpm publish --access public --no-git-checks --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets[matrix.registry.token_secret] }}
          PACKAGE_VERSION: ${{ env.version }}